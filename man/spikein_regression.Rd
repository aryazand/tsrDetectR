% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spikein_normalization.R
\name{spikein_regression}
\alias{spikein_regression}
\title{Use spike-in control to calculate a regression function to normalize pro-seq data}
\usage{
spikein_regression(
  grlist,
  tilewidth = 50,
  average.method = "median",
  average.min = 1
)
}
\arguments{
\item{grlist}{a named GRangesList object representing the mapped reads for spike-in. Must}

\item{tilewidth}{a positive integer giving the size of genomic tiles}

\item{average.method}{how to assess the average coverage within each genomic tile. Choice of "median" or "mean".  Or "none" if not averaging should be done.}

\item{average.min}{when applying the regression function, this is used to filter out counts that are unlikely to be meaningful (i.e. count of 0)}
}
\value{
data.frame
}
\description{
Use spike-in control to calculate a regression function to normalize pro-seq data
}
\examples{
n = 1000
chrLength = 1000
chrNames = c("chr1", "chr2")
mygenome = Seqinfo(
  seqnames = chrNames, 
  seqlengths = rep(chrLength, length(chrNames))) 
w = 10

gr1 <- GRanges(sample(chrNames,n, replace = TRUE), 
 IRanges(sample(seq(chrLength-w), n, replace = TRUE), width = w), 
 strand=sample(c("+", "-"), n, replace = TRUE),
 seqinfo = mygenome)

gr2 <- GRanges(sample(chrNames,n, replace = TRUE), 
 IRanges(sample(seq(chrLength-w), n, replace = TRUE), width = w), 
 strand=sample(c("+", "-"), n, replace = TRUE),
 seqinfo = mygenome)

grlist <- GRangesList(gr1, gr2)
names(grlist) <- c("sample_1", "sample_2")
grlist <- resize(grlist, width = 1, fix = "start")

spikein_regression(grlist)
}
